// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Usuario {
  id      Int      @id @default(autoincrement())
  nombre  String
}

model Animal {
  id                 Int             @id @default(autoincrement())
  dib                String          @unique
  race               String?
  classificationId   Int
  age                Int?
  sexe               String
  animaWeightKg      Float
  createdAt          DateTime  @default(now())
  articles           Article[]      // un animal pot tenir molts articles o no tenir-ne cap
  classification     Classification  @relation(fields: [classificationId], references: [id]) // An animal can have a classification
}

model Article {
  id          Int         @id @default(autoincrement())
  art_codi    Int?
  lot         String      
  name        String
  description String?
  units       Int @default(1)
  unitsConsum Int @default(1)
  price       Float
  image      String?
  weightKg    Float
  animalId    Int
  parentId    Int?       // Si es un article derivat d'un altre article 

  classificationArtId Int   // si es un article que té classificació
  classification   Classification @relation(fields: [classificationArtId], references: [id])
  results             Results[]     @relation("ArticleToResults")
  animal      Animal       @relation(fields: [animalId], references: [id])
  parent      Article?     @relation("ChildToParent", fields: [parentId], references: [id]) // cuan un hi hagui un es creara la columna 
  children    Article[]    @relation("ChildToParent") // Un article pot tenir molts articles derivats d'ell
  

}

model Classification {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  animals     Animal[]
  articles    Article[]  // Una classificació pot tenir molts articles
  results     Results[]   @relation("ClassificationToResults") 
}

model Results {
  id             Int     @id @default(autoincrement())
  MaxWeightKg    Int
  MinWeightKg    Int
  MediumWeightKg Int
  MaxPrice       Int
  MinPrice       Int
  MediumPrice    Int
  Quantity       Int
  articles       Article[] @relation("ArticleToResults") // Un resultat pot tenir molts articles
  classifications Classification[] @relation("ClassificationToResults") // Un resultat pot tenir moltes classificacions
}